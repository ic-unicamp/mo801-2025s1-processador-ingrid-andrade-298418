40000213
00420233
0ab00093
00120023
00001137
23410113
00221223
7e10006f

// Referente a instrução:
//         .text
//         .globl _start
// _start:
//         # Prepara o endereço base para store: 
//         # x4 = 0x0400; add x4, x4, x4 => 0x800
//         addi    x4, x0, 0x0400   # x4 = 0x400
//         add     x4, x4, x4       # x4 = 0x800
// 
//         # Inicializa x1 com 0xAB (171) para testar SB
//         addi    x1, x0, 171      # x1 = 0xAB
//         # Executa SB: armazena o byte de x1 em M[0x800]
//         sb      x1, 0(x4)
// 
//         # Inicializa x2 com 0x1234 (4660 decimal) para testar SH
//         # Como 4660 está fora do alcance imediato de addi, usamos LUI e ADDI.
//         lui     x2, 0x1          # x2 = 0x1000
//         addi    x2, x2, 0x234    # x2 = 0x1000 + 0x234 = 0x1234
//         # Executa SH: armazena o halfword de x2 em M[0x804]
//         sh      x2, 4(x4)
// 
//         # Finaliza a simulação
//         j       0x0FFC          # Salta para 0x0FFC para encerrar a simulação